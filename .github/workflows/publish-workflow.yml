name: Deploy to Azure Container Apps ðŸš€

on:
  workflow_dispatch:
  push:
    branches: [master]

env:
  AZURE_CONTAINER_REGISTRY: ${{ vars.AZURE_CONTAINER_REGISTRY }}
  CONTAINER_APP_NAME: ${{ vars.CONTAINER_APP_NAME }}
  RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore DewaRefit.API/DewaRefit.API.csproj

      - name: Cache .NET build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.nuget/packages
            **/bin
            **/obj
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Build
        run: dotnet build DewaRefit.API/DewaRefit.API.csproj --configuration Release

      - name: Publish
        run: |
          mkdir -p out/DewaRefit.API  # Create the DewaRefit.API directory in out/
          dotnet publish DewaRefit.API/DewaRefit.API.csproj -c Release -o out/DewaRefit.API
          cp DewaRefit.API/Dockerfile out/Dockerfile  # Copy Dockerfile to the out/ directory

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: out/

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: out/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build and push container image to ACR
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ github.sha }}
          file: out/Dockerfile  # Path to the Dockerfile in the out/ directory
          context: out/  # Set context to the out/ directory

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ github.sha }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          environmentVariable: |
            ASPNETCORE_ENVIRONMENT=Development
